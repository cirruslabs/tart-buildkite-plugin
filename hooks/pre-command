#!/bin/bash

# Set shell options to enable fail-fast behavior
#
# * -e: fail the script when an error occurs or command fails
# * -u: fail the script when attempting to reference unset parameters
# * -o pipefail: by default an exit status of a pipeline is that of its
#                last command, this fails the pipe early if an error in
#                any of its commands occurs
#
set -euo pipefail

# Include shared variables and functions
HOOKS_DIR=$(dirname -- "${BASH_SOURCE[0]}")
HOOKS_DIR_ABSOLUTE=$(cd -- "${HOOKS_DIR}" && pwd)
. "${HOOKS_DIR_ABSOLUTE}/../lib/shared"

# Make sure that the VM image is set
if [ -z "${BUILDKITE_PLUGIN_TART_IMAGE}" ]
then
  print "Please specify a VM image to use (e.g. ghcr.io/cirruslabs/macos-sonoma-base:latest)"

  exit 1
fi

# "always_pull" support
if [ "${BUILDKITE_PLUGIN_TART_ALWAYS_PULL:-true}" = "true" ]
then
  tart pull "${BUILDKITE_PLUGIN_TART_IMAGE}"
fi

# Clone the VM image
tart clone "${BUILDKITE_PLUGIN_TART_IMAGE}" "${VM_NAME}"

# Configure "tart run" invocation
RUN_ARGS=()

# Mount the project's directory
RUN_ARGS+=("--dir ${BUILDKITE_BUILD_CHECKOUT_PATH}")

# "headless" support
if [ "${BUILDKITE_PLUGIN_TART_HEADLESS:-true}" = "true" ]
then
  RUN_ARGS+=("--no-graphics")
fi

# "softnet" support
if [ "${BUILDKITE_PLUGIN_TART_SOFTNET:-false}" = "true" ]
then
  RUN_ARGS+=("--net-softnet")
fi

# Run the VM in background
nohup tart run ${RUN_ARGS[*]} "${VM_NAME}" >/dev/null 2>&1 &
